.breeze-sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}
.breeze-sr-only-reset {
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
}

.breeze-focus-ring {
    outline: @ring__width solid @ring__color;
    outline-offset: @ring__offset;
}

.breeze-text-xs {
    font-size: @font-size__xs;
    line-height: @line-height__xs;
}
.breeze-text-sm {
    font-size: @font-size__sm;
    line-height: @line-height__sm;
}
.breeze-text-base {
    font-size: @font-size__base;
    line-height: @line-height__base;
}
.breeze-text-lg {
    font-size: @font-size__lg;
    line-height: @line-height__lg;
}
.breeze-text-xl {
    font-size: @font-size__xl;
    line-height: @line-height__xl;
}
.breeze-text-2xl {
    font-size: @font-size__2xl;
    line-height: @line-height__2xl;
}
.breeze-text-3xl {
    font-size: @font-size__3xl;
    line-height: @line-height__3xl;
}
.breeze-text-4xl {
    font-size: @font-size__4xl;
    line-height: @line-height__4xl;
}
.breeze-text-5xl {
    font-size: @font-size__5xl;
    line-height: @line-height__5xl;
}

.breeze-link {
    color: @link__color;
    text-decoration: @link__text-decoration;
    &:hover {
        --link-alpha: 1;
        text-decoration: @link__hover__text-decoration;
    }
}

.breeze-table {
    display: block;
    thead {
        display: none;
    }
    tbody,
    tfoot,
    th,
    tr,
    td {
        display: block;
    }
    tr {
        margin-bottom: @3;
        padding-bottom: @3;
    }
    td,
    th {
        padding: @1 0;
        &[data-th]::before {
            .padding-right(10px);
            content: attr(data-th) ': ';
            display: inline-block;
            color: @muted__color;
            font-weight: 500;
        }
    }
    tfoot {
        .text-align(right);
    }
}
.breeze-striped-table {
    > tbody {
        > tr {
            border-bottom: 0;
            &:nth-child(odd) {
                background: @muted__background;
            }
        }
    }
}

.breeze-prose {
    :where(a:not(.product-item-link):not(.action)) {
        .breeze-link();
    }
    p,
    :where(ul:not(.unstyled)),
    :where(ol:not(.unstyled)),
    table,
    figure {
        margin-bottom: @3;
    }
    :where(ul ul, ul ol, ol ul, ol ol) {
        margin-bottom: 0;
    }
    section {
        margin-bottom: @4;
    }
    :where(ul:not(.unstyled)),
    :where(ol:not(.product-items):not(.unstyled)) {
        .padding-left(@5);
    }
    :where(ul:not(.unstyled)) {
        list-style: disc;
    }
    :where(ol:not(.product-items):not(.unstyled)) {
        list-style: auto;
    }
    li::marker {
        --muted-alpha: .4;
        color: @muted__color;
    }
    blockquote {
        margin: @6 0;
        .padding-left(@4);
        .border-left(4px solid @divider__color);
        font-style: italic;
        font-weight: 500;
    }
    code {
        font-weight: 600;
        &::before,
        &::after {
            content: "`";
        }
    }
    pre {
        margin: @4 0;
        padding: @4;
        overflow-x: auto;
        background: @muted__background;
        code {
            font-weight: 400;
            &:before,
            &:after {
                content: '';
            }
        }
    }
    hr {
        margin: @8 0;
    }
    figcaption {
        margin-top: @2;
        color: @muted__color;
    }
    .lead {
        .breeze-text-xl();
        color: @muted__color;
    }
}

.breeze-prose-reset {
    a {
        --link-alpha: 1;
        --link-color: var(--base-color);

        text-decoration: none;
        &:hover {
            text-decoration: none;
        }
    }
    p,
    ul,
    ol,
    table,
    figure {
        margin-bottom: 0 !important;
    }
    ol, ul {
        .padding-left(~"0 !important");
    }
    li::marker {
        color: initial !important;
    }
    ul {
        list-style: none !important;
    }
    ol {
        list-style: none !important;
    }
}

.invert-colors {
    color: @base__color;

    .lib-css(--base-color, @inverted--base-color);
    .lib-css(--base-alpha, @inverted--base-alpha);
    .lib-css(--headings-alpha, @inverted--headings-alpha);
    .lib-css(--link-color, @inverted--link-color);
    .lib-css(--link-alpha, @inverted--link-alpha);
    .lib-css(--muted-bg, @inverted--muted-bg);
    .lib-css(--muted-bg-alpha, @inverted--muted-bg-alpha);
    .lib-css(--ring-color, @inverted--ring-color);
    .lib-css(--ring-alpha, @inverted--ring-alpha);
    .lib-css(--button-bg, @inverted--button-bg);
    .lib-css(--button-border-color, @inverted--button-border-color);
    .lib-css(--button-color, @inverted--button-color);
    .lib-css(--input-color, @inverted--base-color);
    .lib-css(--input-alpha, @inverted--base-alpha);
    .lib-css(--input-bg, @inverted--input-bg);
    .lib-css(--input-bg-alpha, @inverted--input-bg-alpha);
    .lib-css(--input-border-color, @inverted--input-border-color);
    .lib-css(--input-border-alpha, @inverted--input-border-alpha);
    .lib-css(--input-focus-border-color, @inverted--ring-color);
}

.invert-colors-reset {
    color: @base__color;

    .lib-css(--base-color, @rgb-base);
    .lib-css(--link-color, @rgb-link);
    .lib-css(--muted-bg, @rgb-muted-bg);
    .lib-css(--muted-bg-alpha, 1);
    .lib-css(--ring-color, @rgb-ring);
    .lib-css(--ring-alpha, 1);
    .lib-css(--input-color, @rgb-base);
    .lib-css(--input-alpha, 1);
    .lib-css(--input-bg, @rgb-input-bg);
    .lib-css(--input-bg-alpha, 1);
    .lib-css(--input-border-color, @rgb-input-border);
    .lib-css(--input-border-alpha, 1);
    .lib-css(--input-focus-border-color, @rgb-input-focus-border);
}
