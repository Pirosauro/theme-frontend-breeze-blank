& when (@critical) {
    .swatch-attribute {
        margin-bottom: @swatch-options__margin-bottom;
        &:last-child {
            margin: 0;
        }
        .product.item & {
            .lib-css(margin-bottom, @swatch-options__listing__margin-bottom);
            &:last-child {
                margin: 0;
            }
        }
    }
    .swatch-attribute-label {
        font-weight: 500;
        .margin-right(@1);
        ~ .swatch-attribute-options {
            margin-top: @swatch-options__margin-top;
        }
    }
    .swatch-attribute-options {
        display: flex;
        flex-wrap: wrap;
        gap: @swatch__gap;

        .products-grid & {
            .lib-css(justify-content, @swatch-options__listing__justify-content);
        }
    }
    .swatch-option {
        .text-xs();
        color: @muted__color;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        min-width: @swatch__size;
        height: @swatch__size;
        padding: 0 @1;
        background: @muted__background;
        position: relative;
        margin: abs(@swatch__border-offset);
        .lib-css(border-radius, @swatch__border-radius);

        &-link-layered {
            .lib-css(border-radius, @swatch__border-radius);
        }

        &::before {
            content: '';
            position: absolute;
            box-shadow: 0 0 0 1px inset @divider__color;
            .lib-css(border-radius, @swatch__border-radius);
            top: @swatch__border-offset;
            bottom: @swatch__border-offset;
            left: @swatch__border-offset;
            right: @swatch__border-offset;
        }

        .product.item & {
            .lib-css(font-size, @swatch__listing__font-size);
            .lib-css(min-width, @swatch__listing__size);
            .lib-css(height, @swatch__listing__size);
            & when not (@swatch__listing__border-offset = false) {
                margin: abs(@swatch__listing__border-offset);
            }
            &::before {
                .lib-css(top, @swatch__listing__border-offset);
                .lib-css(bottom, @swatch__listing__border-offset);
                .lib-css(left, @swatch__listing__border-offset);
                .lib-css(right, @swatch__listing__border-offset);
            }
        }
    }
    input.swatch-input {
        position: absolute;
        visibility: hidden;
        .left(-9999px);
        .actions-primary & {
            display: none; // disable validation in product listing
        }
    }
    .product.item {
        [class^="swatch-opt-"] {
            .lib-css(margin, @swatch-wrapper__listing__margin);

            & when not (@swatch-wrapper__listing__media-hidden = false) {
                @media @swatch-wrapper__listing__media-hidden {
                    display: none;
                }
            }
        }
    }
}

.swatch-option-tooltip {
    &:extend(.breeze-dropdown all);
    &[style*="block"] {
        &:extend(.breeze-dropdown-visible);
    }
}

& when not (@critical) {
    .swatch-option-tooltip {
        .text-sm();
        .right(auto);
        transform-origin: bottom;
        width: auto;
        text-align: center;
        padding: @1;
        min-width: @8;
    }
    .swatch-option {
        &.selected {
            &::before {
                box-shadow: 0 0 0 2px inset @brand__color,
                            0 0 0 3px inset @white;
            }
        }
    }
    .product-item-info-image-loading {
        .product-item-photo {
            &::before {
                content: '';
                &:extend(.spinner);
                border-color: @base__color;
                border-top-color: transparent;
                opacity: .3;
                position: absolute;
                left: 50%;
                top: 50%;
                margin-top: -@3;
                .margin-left(-@2-5);
            }
            img,
            picture {
                opacity: .5;
            }
        }
    }
}
