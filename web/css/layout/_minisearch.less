.minisearch {
    .search-autocomplete {
        &:extend(.breeze-dropdown);
        &:not(:empty):not([style*="display:none"]):not([style*="display: none"]) {
            &:extend(.breeze-dropdown-visible);
        }
        [role="listbox"] li {
            &:extend(.breeze-dropdown .item all);
        }
    }
}

& when (@critical) {
    .header .block-search {
        .block-title {
            display: none;
        }
        .label {
            span {
                &:extend(.sr-only);
            }
        }
        @media @media-sm-down {
            .label {
                &::before {
                    content: '';
                    display: block;
                    width: @6;
                    height: @6;
                }
            }
        }
    }

    .minisearch {
        display: flex;
        align-items: center;
        justify-content: flex-end;

        &.active {
            .control {
                display: block;
                z-index: 40;
                left: 0;
                right: 0;
            }
            .actions {
                display: flex;
            }
        }

        .control {
            position: relative;
            padding: @4;
            background: @base__background;
            position: absolute;
            top: 100%;
            .left(-9999px);

            @media @media-sm {
                background: transparent;
                position: static;
                display: block;
                padding: 0;
            }
            .input-text {
                .padding-right(@9);
            }
            .nested {
                display: none;
                position: absolute;
                top: 100%;
                .text-sm();
            }
        }

        .actions {
            display: none;
            position: absolute;
            top: 100%;
            .right(@6);
            z-index: 11;
            @media @media-sm {
                display: flex;
                position: static;
            }
        }

        .action.search {
            &:extend(.button-reset all);
            .margin-left(-@8);

            span {
                &:extend(.sr-only);
            }
            &::before {
                content: '';
                display: block;
                width: @6;
                height: @6;
            }
        }
    }
}

& when not (@critical) {
    .minisearch {
        .label {
            &::before {
                cursor: pointer;
                .breeze-icon(@icon-search);
            }
        }
        .action.search {
            &::before {
                .breeze-icon(@icon-search);
            }
        }
        .search-autocomplete {
            .right(auto);

            [role="listbox"] {
                li {
                    display: flex;
                    align-items: center;
                    gap: @1;
                    &.selected {
                        background: @muted__background;
                    }
                }
                .amount {
                    opacity: .5;
                }
            }
        }
    }
}
