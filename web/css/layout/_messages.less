& when (@critical) {
    & when (@message__sticky) {
        .page-main > .page.messages {
            z-index: 810;
            position: fixed;
            top: @4;
            left: 0;
            right: 0;
            pointer-events: none;

            .messages {
                &:extend(.container all);
            }

            .message {
                &:extend(.transition);
                transform: translateY(-50px);
                opacity: 0;

                // See messages.js in breeze-module
                &.shown {
                    opacity: 1;
                    transform: translateY(0);
                    pointer-events: all;
                }
            }
        }
    }

    .message {
        display: flex;
        align-items: flex-start;
        gap: @1;
        padding: @3 @4;
        margin-bottom: @3;
        border: 1px solid transparent;

        .lib-css(font-family, @message__font-family);
        .lib-css(font-size, @message__font-size);
        .lib-css(font-weight, @message__font-weight);
        .lib-css(text-transform, @message__text-transform);
        .lib-css(border-radius, @message__border-radius);
        .lib-css(border-width, @message__border-width);
        .lib-css(box-shadow, @message__box-shadow);

        > div {
            .margin-right(auto);
        }

        & when (@message__text-align = center) {
            > div {
                .margin-left(auto);
            }
        }

        .field + &,
        .control & {
            margin-top: @2;
        }

        a {
            text-decoration: underline !important;
        }

        &.warning,
        &.success,
        &.notice,
        &.error,
        &.info, {
            &::before {
                flex-shrink: 0;
                content: '';
                width: @6;
                height: @6;
            }
        }
    }
}

& when not (@critical) {
    .message {
        .lib-css(background, @message__background);
        .lib-css(color, @message__color);
        .lib-css(border-color, @message__border-color);

        a {
            .lib-css(color, @message-link__color);
            &:hover {
                text-decoration: none !important;
            }
        }

        > .button-close::before {
            -webkit-mask-size: @4 @4;
        }

        &.success {
            .lib-rgb(--message-bg, @message-success__background-color);
            .lib-rgb(--message-color, @message-success__text-color);
            .lib-rgb(--message-border-color, @message-success__border-color);
            &::before {
                .breeze-icon(@icon-s-check, @5);
            }
        }
        &.info,
        &.warning,
        &.notice {
            .lib-rgb(--message-bg, @message-info__background-color);
            .lib-rgb(--message-color, @message-info__text-color);
            .lib-rgb(--message-border-color, @message-info__border-color);
            &::before {
                .breeze-icon(@icon-s-information-circle, @5)
            }
        }
        &.error {
            .lib-rgb(--message-bg, @message-error__background-color);
            .lib-rgb(--message-color, @message-error__text-color);
            .lib-rgb(--message-border-color, @message-error__border-color);
            &::before {
                .breeze-icon(@icon-s-exclamation-circle, @5)
            }
        }
    }
}
